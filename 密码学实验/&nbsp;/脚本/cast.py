import gmpy2
import libnum
from Crypto.Util.number import long_to_bytes

n1 = 23675419631993507463818059881429769686359743863285597128800450037112357920938668654834466519826639811293122629626429304667612386044772990112393241711835169069678548639070600991585033911044276338130843314138197138359008148075431474690641368310833463589835870049054188043890182956188296695572246406981658874643142177008756387493407841191159996818259488831970621288278139681792250741806220199048789547146790817228201895808427563985826285380778698719143429848152392085663605095317442572945301298373767316438262284676725672863724648544297382301686182433371094066782694580907761805466157312373870192913315495493529028057721
c1 = 1344554467507098812517147097994473097006400169725435058749215812345465794330175683817959838155766558679420867284039526412535722997277053523854978270634439257548378233248023378046650450659865604754998542541413575870286559732826112110358580164569401706799268374769687648665099979397680295683435243849072425825931181793402537259071637645369457641037914602461785009279378574210524388368579402305365310141264651780957932603959519098339883893353321042742629911750995944623750766092533257123075058385397113853781711528487770318434270200378658903038542861510130328041677287521217719920521056532957842625552919316843117767472

n2 = 24140927491517289187014868890370561346383269619543864697739596352497794449645157337663758590035821851357765595328264090401980593953129153636374011079328271586492953885390724188865403816117199388725223411677082906611171994683336243290745387343249749554991248169768037905060197527073990977535633141905213587034252276526176455303569757054726558437136523320829307016665638482379442001673809408766235801707196180048199941767123972476572607470458896204567044099176692018787679921474351744855408681513704514212765372712822984578426113433308701099115210084277924952561785181691400401702685011203000713961009954439965615818919
c2 = 15904359159312661129725538518827997832487633460082334599810448104118393459292081861606437781003023441815160712624655130253162339725201497059956542283789024783211761997499789952224391303158302982944435198302895022097466041374477568538638283801981665106662469782744265143465357444483496423691363606980947655324362937828463330561431704479456161733676366784417241311709807770278437461976400102583857246193854208225460680919550567420665337023034677029375578813429721199500485712301334876648137648711809031455750509629578286620603964126859622178375820750008555103903609792921285386937559017371995817770278054549325032290978

n3 = 17485970444943745602601440365503774125961298754380211165366321559138829490214507095089736562286152994189619087137452922099632482752254369925854471352087968272302078457988042193041557613801573154635233926370691490845133331693700581893538743100100812458103649984263774354505586468353636258644690327744779980743303650600960723807710459762305394078828046766706321095821158424362511962347269917258051340133989684707303458647919127783255363070131227250044321451417790935583576103948648335292124674167250678064664457117454268903714075758755476439168754005523147426980535779312728970479759483560355694161223430582175479150711
c3 = 6667523841960784107710159044349009128628271585753408522784891493457089604435281265875810132206163340547321591531854549629681760786225782260502500287776015084015325906493374525394158870200237549215523310933956966259610098242746936950918729661407539732778259103814548165334935478561333867645410128614799651575059178639753540076762981067850859656338399863740434096296768284094429007488224144966049235376373887350938531987540263002775463890192247646556341623645824343529223017200245492266443841999503612082810287376395593870014291062475775595329930976947004993046551447573659884885369437512803209657114502028089833165150

p =  1142048027519150730809999683819134107074407737936380682645112685139068022465608651548539836472669611232255650443512440054654114044433589027873530502608814981947400801742963090638505220851285388289427529085824619783645933904060285089939830144182029755471472805437120027470561120105410805074497968245617

def boradcast_fuzz(question, e):
    N = 1
    for i in range(len(question)):
        N *= question[i]['n']
    N_list = []
    for i in range(len(question)):
        N_list.append(N // question[i]['n'])
    t_list = []
    for i in range(len(question)):
        t_list.append(int(gmpy2.invert(N_list[i], question[i]['n'])))
    sum = 0
    for i in range(len(question)):
        sum = (sum + question[i]['c'] * t_list[i] * N_list[i]) % N
    # return libnum.n2s(sum)
    return gmpy2.iroot(sum,3)


question = [
    {'n': n1, 'c': c1},
    {'n': n2, 'c': c2},
    {'n': n3, 'c': c3},
]

for i in range(3, 4):
    res = boradcast_fuzz(question, i)
    print(res)